box = list(gpar(fill = ifelse((HR_ORR$pval/2) <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[1] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[2] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[3] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[4] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[5] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[6] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[7] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[8] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[9] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[10] <0.05, "blue", "red"))
# ,gpar(fill = ifelse((HR_ORR$pval/2)[11] <0.05, "blue", "red"))
)
)
forestplot(tabletext_ORR,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_ORR$effect_size,10)),
lower =c(NA,
log(HR_ORR$lower_ci,10)),
upper = c(NA,
log(HR_ORR$upper_ci,10)),
clip=c(-1,5),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
tabletext_ORR
### plot ###
tabletext_ORR= cbind(c("Cancer Type",
rownames(Figure_1B_plot_df)),
c("# patient",
no_of_samples$ID),
c("pval",
round(Figure_1B_plot_df$pval/2, 5)))
HR_ORR=Figure_1B_plot_df
styles <- fpShapesGp(
lines = list(gpar(col = ifelse((HR_ORR$pval/2) <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[1] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[2] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[3] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[4] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[5] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[6] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[7] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[8] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[9] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[10] <0.05, "blue", "red"))
# , gpar(col = ifelse((HR_ORR$pval/2)[10] <0.05, "blue", "red"))
),
box = list(gpar(fill = ifelse((HR_ORR$pval/2) <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[1] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[2] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[3] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[4] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[5] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[6] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[7] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[8] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[9] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[10] <0.05, "blue", "red"))
# ,gpar(fill = ifelse((HR_ORR$pval/2)[11] <0.05, "blue", "red"))
)
)
forestplot(tabletext_ORR,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_ORR$effect_size,10)),
lower =c(NA,
log(HR_ORR$lower_ci,10)),
upper = c(NA,
log(HR_ORR$upper_ci,10)),
clip=c(-1,5),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
pdf('/Users/neelamf2/Desktop/panel_1_B.pdf',
width = 10)
forestplot(tabletext_ORR,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_ORR$effect_size,10)),
lower =c(NA,
log(HR_ORR$lower_ci,10)),
upper = c(NA,
log(HR_ORR$upper_ci,10)),
clip=c(-1,5),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
#################################################################
# Forest plot for ORR vs TMB cancer type with sample more than 50/all
#################################################################
cancertype = samples_each_cancer_type[,3][samples_each_cancer_type[,2]> 1]
ORR_cox_results
Figure_1B_plot_df= ORR_cox_results[rownames(ORR_cox_results) %in% cancertype,]
Figure_1B_plot_df= Figure_1B_plot_df[!is.na(Figure_1B_plot_df$effect_size) &
is.finite(Figure_1B_plot_df$effect_size),]
Figure_1B_plot_df= Figure_1B_plot_df[!(rownames(Figure_1B_plot_df) %in% c("STAD",
'PAAD',
"Unknown-Primary")),]
Figure_1B_plot_df=Figure_1B_plot_df[order(Figure_1B_plot_df$effect_size,
decreasing = F),]
no_of_samples= samples_each_cancer_type[samples_by_cancer_type$ID >1,]
no_of_samples= no_of_samples[match(rownames(Figure_1B_plot_df),no_of_samples$cancer_acronym),]
colnames(Figure_1B_plot_df)[2]= "pval"
### plot ###
tabletext_ORR= cbind(c("Cancer Type",
rownames(Figure_1B_plot_df)),
c("# patient",
no_of_samples$ID),
c("pval",
round(Figure_1B_plot_df$pval/2, 5)))
HR_ORR=Figure_1B_plot_df
styles <- fpShapesGp(
lines = list(gpar(col = ifelse((HR_ORR$pval/2) <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[1] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[2] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[3] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[4] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[5] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[6] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[7] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[8] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[9] <0.05, "blue", "red")),
gpar(col = ifelse((HR_ORR$pval/2)[10] <0.05, "blue", "red"))
# , gpar(col = ifelse((HR_ORR$pval/2)[10] <0.05, "blue", "red"))
),
box = list(gpar(fill = ifelse((HR_ORR$pval/2) <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[1] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[2] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[3] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[4] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[5] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[6] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[7] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[8] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[9] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_ORR$pval/2)[10] <0.05, "blue", "red"))
# ,gpar(fill = ifelse((HR_ORR$pval/2)[11] <0.05, "blue", "red"))
)
)
pdf('/Users/neelamf2/Desktop/panel_1_B.pdf',
width = 10)
forestplot(tabletext_ORR,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_ORR$effect_size,10)),
lower =c(NA,
log(HR_ORR$lower_ci,10)),
upper = c(NA,
log(HR_ORR$upper_ci,10)),
clip=c(-1,5),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
dev.off()
PFS_result_with_TMB_plot= PFS_cox_results
PFS_result_with_TMB_plot= PFS_result_with_TMB_plot[rownames(PFS_result_with_TMB_plot)
%in% cancertype,]# remove cancer type less than 50
PFS_result_with_TMB_plot= na.omit(PFS_result_with_TMB_plot)
PFS_result_with_TMB_plot= PFS_result_with_TMB_plot[!(rownames(PFS_result_with_TMB_plot) %in% c('KIRC',
"STAD",
'SCLC',
"Unknown-Primary")),]
PFS_result_with_TMB_plot=PFS_result_with_TMB_plot[
order(PFS_result_with_TMB_plot$exp.coef., decreasing = F),]
colnames(PFS_result_with_TMB_plot)[5] = "pval"
### number of Samples
no_of_samples_PFS= samples_each_cancer_type[samples_by_cancer_type$ID >1,]
no_of_samples_PFS = no_of_samples_PFS[match(rownames(PFS_result_with_TMB_plot),no_of_samples_PFS$cancer_acronym),]
# no_of_samples_PFS$cancer_acronym= PFS_result_with_TMB_plot$cancer_acorymn
### plot ###
tabletext_PFS= cbind(c("Cancer Type",
rownames(PFS_result_with_TMB_plot)),
c("# Samples",
no_of_samples_PFS$ID),
c("pval",
round(PFS_result_with_TMB_plot$pval/2, 8)))
tabletext_PFS
# no_of_samples_PFS$cancer_acronym= PFS_result_with_TMB_plot$cancer_acorymn
### plot ###
tabletext_PFS= cbind(c("Cancer Type",
rownames(PFS_result_with_TMB_plot)),
c("# Samples",
no_of_samples_PFS$ID),
c("pval",
round(PFS_result_with_TMB_plot$pval/2, 8)))
## data
HR_PFS=PFS_result_with_TMB_plot
### styles for color according to pval
styles_PFS <- fpShapesGp(
lines = list(gpar(col ="Blue"),
gpar(col = ifelse((HR_PFS$pval/2)[1] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[2] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[3] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[4] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[5] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[6] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[7] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[8] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[9] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[10] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[11] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[12] <0.05, "blue", "red"))
),
box = list(gpar(fill = "blue"),
gpar(fill = ifelse((HR_PFS$pval/2)[1] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[2] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[3] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[4] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[5] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[6] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[7] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[8] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[9] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[10] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[11] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[12] <0.05, "blue", "red"))
)
)
# plot.new()
forestplot(tabletext_PFS,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_PFS$exp.coef.,10)),
lower =c(NA,
log(HR_PFS$lower..95,10)),
upper = c(NA,
log(HR_PFS$upper..95,10)),
clip=c(-1,1),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles_PFS$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles_PFS,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
,3
#################################################################
# Forest plot for PFS vs TMB cancer type with sample more than 50/ all
# original r script step 15 ORR when initial function is given
#################################################################
cancertype = samples_each_cancer_type[,3][samples_each_cancer_type[,2]> 1]
PFS_result_with_TMB_plot= PFS_cox_results
PFS_result_with_TMB_plot= PFS_result_with_TMB_plot[rownames(PFS_result_with_TMB_plot)
%in% cancertype,]# remove cancer type less than 50
PFS_result_with_TMB_plot= na.omit(PFS_result_with_TMB_plot)
PFS_result_with_TMB_plot= PFS_result_with_TMB_plot[!(rownames(PFS_result_with_TMB_plot) %in% c('KIRC',
"STAD",
'SCLC',
"Unknown-Primary")),]
PFS_result_with_TMB_plot=PFS_result_with_TMB_plot[
order(PFS_result_with_TMB_plot$effect_size, decreasing = F),]
colnames(PFS_result_with_TMB_plot)[5] = "pval"
colnames(PFS_result_with_TMB_plot)[2] = "pval"
### number of Samples
no_of_samples_PFS= samples_each_cancer_type[samples_by_cancer_type$ID >1,]
no_of_samples_PFS = no_of_samples_PFS[match(rownames(PFS_result_with_TMB_plot),no_of_samples_PFS$cancer_acronym),]
# no_of_samples_PFS$cancer_acronym= PFS_result_with_TMB_plot$cancer_acorymn
### plot ###
tabletext_PFS= cbind(c("Cancer Type",
rownames(PFS_result_with_TMB_plot)),
c("# Samples",
no_of_samples_PFS$ID),
c("pval",
round(PFS_result_with_TMB_plot$pval/2, 8)))
## data
HR_PFS=PFS_result_with_TMB_plot
### styles for color according to pval
styles_PFS <- fpShapesGp(
lines = list(gpar(col ="Blue"),
gpar(col = ifelse((HR_PFS$pval/2)[1] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[2] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[3] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[4] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[5] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[6] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[7] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[8] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[9] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[10] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[11] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[12] <0.05, "blue", "red"))
),
box = list(gpar(fill = "blue"),
gpar(fill = ifelse((HR_PFS$pval/2)[1] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[2] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[3] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[4] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[5] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[6] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[7] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[8] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[9] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[10] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[11] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[12] <0.05, "blue", "red"))
)
)
pdf('/Users/neelamf2/Documents/GitHub/Immune_determinant_for_power_of_TMB/Result_fgures/Extended_panel_1.pdf',
width = 10)
# plot.new()
forestplot(tabletext_PFS,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_PFS$exp.coef.,10)),
lower =c(NA,
log(HR_PFS$lower..95,10)),
upper = c(NA,
log(HR_PFS$upper..95,10)),
clip=c(-1,1),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles_PFS$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles_PFS,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
dev.off()
# plot.new()
forestplot(tabletext_PFS,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_PFS$effect_size,10)),
lower =c(NA,
log(HR_PFS$lower_ci,10)),
upper = c(NA,
log(HR_PFS$upper_ci,10)),
clip=c(-1,1),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles_PFS$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles_PFS,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
cancertype = samples_each_cancer_type[,3][samples_each_cancer_type[,2]> 1]
Ex_figure_1_plot_df= PFS_cox_results
Ex_figure_1_plot_df= Ex_figure_1_plot_df[rownames(Ex_figure_1_plot_df)
%in% cancertype,]# remove cancer type less than 50
Ex_figure_1_plot_df= na.omit(Ex_figure_1_plot_df)
Ex_figure_1_plot_df= Ex_figure_1_plot_df[!(rownames(Ex_figure_1_plot_df) %in% c('KIRC',
"STAD",
'SCLC',
"Unknown-Primary")),]
Ex_figure_1_plot_df=Ex_figure_1_plot_df[
order(Ex_figure_1_plot_df$effect_size, decreasing = F),]
colnames(Ex_figure_1_plot_df)[2] = "pval"
### number of Samples
no_of_samples_PFS= samples_each_cancer_type[samples_by_cancer_type$ID >1,]
no_of_samples_PFS = no_of_samples_PFS[match(rownames(Ex_figure_1_plot_df),no_of_samples_PFS$cancer_acronym),]
### plot ###
tabletext_PFS= cbind(c("Cancer Type",
rownames(Ex_figure_1_plot_df)),
c("# Samples",
no_of_samples_PFS$ID),
c("pval",
round(Ex_figure_1_plot_df$pval/2, 8)))
## data
HR_PFS=Ex_figure_1_plot_df
### styles for color according to pval
styles_PFS <- fpShapesGp(
lines = list(gpar(col ="Blue"),
gpar(col = ifelse((HR_PFS$pval/2)[1] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[2] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[3] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[4] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[5] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[6] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[7] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[8] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[9] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[10] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[11] <0.05, "blue", "red")),
gpar(col = ifelse((HR_PFS$pval/2)[12] <0.05, "blue", "red"))
),
box = list(gpar(fill = "blue"),
gpar(fill = ifelse((HR_PFS$pval/2)[1] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[2] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[3] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[4] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[5] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[6] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[7] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[8] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[9] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[10] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[11] <0.05, "blue", "red")),
gpar(fill = ifelse((HR_PFS$pval/2)[12] <0.05, "blue", "red"))
))
pdf('/Users/neelamf2/Desktop/Extended_panel_1.pdf', width = 10)
forestplot(tabletext_PFS,
boxsize = .30, # We set the box size to better visualize the type
line.margin = .30, # We need to add this to avoid crowding
mean = c(NA,
log(HR_PFS$effect_size,10)),
lower =c(NA,
log(HR_PFS$lower_ci,10)),
upper = c(NA,
log(HR_PFS$upper_ci,10)),
clip=c(-1,1),
lty.ci = c(1),
ci.vertices = TRUE,
graph.pos=3, # position of the box plot
graphwidth = unit(12,"cm"),
colgap = unit(1.2,"mm"),
col=fpColors(box= styles_PFS$box[1]),
xlab="Log (10) Odd Ratio",
ylab= "Cancer Types",
shapes_gp = styles_PFS,
txt_gp = fpTxtGp(label = list(gpar(fontface = 1,cex= 1.5),
gpar(fontface = 1, cex= 1.5),
gpar(fontface = 1,cex=1.5)),
ticks=gpar(cex=1.25),
xlab = gpar(cex=1.25),
title = gpar(fontface = 2,cex= 1.48)),
grid = structure(c(-1), gp = gpar(lty = 1, col = "black")),
title = 'Power of TMB of Recists response between high and low TMB group')
dev.off()
